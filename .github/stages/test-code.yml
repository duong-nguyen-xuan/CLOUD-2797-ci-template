image: golang:${GOLANG_IMAGE_VERSION}
stages:
   - Test

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH   == $CI_DEFAULT_BRANCH'

before_script:  |
    WORKSPACE_NAME=${CI_PROJECT_NAME}
       ## reading private key
    command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )
    eval $(ssh-agent -s)
    echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    mkdir -p ~/.ssh && touch ~/.ssh/known_hosts
      ##  https://techcommunity.microsoft.com/t5/microsoft-defender-for-cloud/security-control-secure-management-ports/ba-p/1505770
    ssh-keyscan -p 443 -H altssh.gitlab.com >> ~/.ssh/known_hosts
    cat << EOF > ~/.ssh/config
    Host gitlab.com
      Hostname altssh.gitlab.com
      Port 443
      PreferredAuthentications publickey
    EOF
    chmod 644 ~/.ssh/known_hosts
    chmod 644 ~/.ssh/config
       ## terraform installation
    apt-get update
    apt-get install wget -y unzip
    curl -sLO https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip
    unzip terraform_${TF_VERSION}_linux_amd64.zip && rm -rf terraform_${TF_VERSION}_linux_amd64.zip
    mv terraform /usr/local/bin/terraform
    if [ -z "$SUB_MODULE_DIR" ]; then cd tests; else cd $SUB_MODULE_DIR/tests; fi
    ( if [ -f "../providers.tf" -a ! -f "./providers.tf" ]; then  cp ../providers.tf ./ && cp ../versions.tf ./; fi )
    ( if [ -f "./test-provider.tf" ]; then  cp ./test-provider.tf ../ && cp ../versions.tf ./; fi )
    ( if [ -f "./component-provider.tf" ]; then  mv ./component-provider.tf ../; fi )

include:
    - local: /azure/gitlab/terraform/ci-pipeline/jobs/setup-az-cli.yml
    - local: /azure/gitlab/terraform/ci-pipeline/jobs/create-resource-group.yml
    - local: /azure/gitlab/terraform/ci-pipeline/jobs/inject-pipeline-variables.yml
    - local: /azure/gitlab/terraform/ci-pipeline/jobs/configure-dependecies.yml
    - local: /azure/gitlab/terraform/ci-pipeline/jobs/unit-test.yml
    - local: /azure/gitlab/terraform/ci-pipeline/jobs/integration-test.yml
    - local: /azure/gitlab/terraform/ci-pipeline/jobs/delete-tf-dependencies.yml 
    - local: /azure/gitlab/terraform/ci-pipeline/jobs/delete-resource-group.yml
